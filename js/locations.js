import { character} from './character.js';

export const LOCATIONS = {
    city: { name: '–°—Ç–æ–ª–∏—Ü–∞ –≠–ª—å–¥—Ä–∞–º–∏—Ä', danger: 0, description: '–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞ —Å –≥–∏–ª—å–¥–∏–µ–π –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç–æ–≤' },
    forest: { name: '–õ–µ—Å –¢–µ–Ω–µ–π', danger: 1, description: '–ì—É—Å—Ç–æ–π –ª–µ—Å —Å–æ —Å–ª–∞–±—ã–º–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞–º–∏' },
    mountains: { name: '–ü–∏–∫–∏ –•–∞–æ—Å–∞', danger: 3, description: '–û–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞ —Å —Å–∏–ª—å–Ω—ã–º–∏ –≤—Ä–∞–≥–∞–º–∏' },
    valley: { name: '–î–æ–ª–∏–Ω–∞ –í–µ—á–Ω–æ–≥–æ –¶–≤–µ—Ç–µ–Ω–∏—è', danger: 1, description: '–ñ–∏–≤–æ–ø–∏—Å–Ω–∞—è –¥–æ–ª–∏–Ω–∞ —Å –º–∞–≥–∏—á–µ—Å–∫–∏–º–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏' },
    ruins: { name: '–†—É–∏–Ω—ã –î—Ä–µ–≤–Ω–µ–π –ò–º–ø–µ—Ä–∏–∏', danger: 2,description: '–û—Å—Ç–∞—Ç–∫–∏ –∑–∞–±—ã—Ç–æ–π —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏, –ø–æ–ª–Ω—ã–µ —Ç–∞–π–Ω' },
    lake: { name: '–û–∑–µ—Ä–æ –•—Ä—É—Å—Ç–∞–ª—å–Ω—ã—Ö –í–æ–¥', danger: 3, description: '–ú–µ—Ä—Ü–∞—é—â–∏–µ –≤–æ–¥—ã —Å —Ü–µ–ª–µ–±–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏' },
    enchantedForest: { name: '–õ–µ—Å –®–µ–ø—á—É—â–∏—Ö –î–µ—Ä–µ–≤—å–µ–≤', danger: 4,description: '–î—Ä–µ–≤–Ω–∏–π –ª–µ—Å —Å —Ä–∞–∑—É–º–Ω—ã–º–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏' },
    canyon: { name: '–ö–∞–Ω—å–æ–Ω –ü–µ—Å—á–∞–Ω—ã—Ö –ë—É—Ä—å', danger: 5,description: '–ë–µ—Å–∫—Ä–∞–π–Ω–∏–µ –ø–µ—Å—á–∞–Ω—ã–µ –ø—Ä–æ—Å—Ç–æ—Ä—ã —Å —Ç–∞–π–Ω–∞–º–∏' }
};

// –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π
export function autoChangeLocation() {
    setTimeout(() => {
        if (character.travelCooldown > 0) return;
        if (character.isInBattle === false){
            const previousLocation = character.location;
            let newLocation;
            
            // –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π –ª–æ–∫–∞—Ü–∏–∏
                if (character.health < character.maxHealth * 0.4 && character.travelCooldown === 0) {
                    newLocation = 'city'; // –ê–≤—Ç–æ-–≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –≥–æ—Ä–æ–¥ –ø—Ä–∏ –Ω–∏–∑–∫–æ–º –∑–¥–æ—Ä–æ–≤—å–µ
                } else {
                    const locationKeys = Object.keys(LOCATIONS);
                    newLocation = locationKeys.filter(l => l !== 'city')[Math.floor(Math.random() * (locationKeys.length - 1))];
                    
                    // 30% —à–∞–Ω—Å –æ—Å—Ç–∞—Ç—å—Å—è –≤ —Ç–µ–∫—É—â–µ–π –ª–æ–∫–∞—Ü–∏–∏
                    if (Math.random() < 0.3) newLocation = character.location;
                }
                
            // –ù–µ –ø–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è, –µ—Å–ª–∏ –Ω–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–µ–π
            if (newLocation === character.location) return;
            
        if(character.travelCooldown === 0)
            character.location = newLocation;
            character.travelCooldown = 3 + Math.floor(Math.random() * 3);
            
            addEvent(` ${character.name} –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª—Å—è –≤ ${LOCATIONS[newLocation].name}`);
            updateMapDisplay();
            
            // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏
            handleLocationEvent(previousLocation, newLocation);
        }
        if (character.isInBattle === true){
            addEvent(` ${character.name} –ü—ã—Ç–∞–ª—Å—è —Å–∫—Ä—ã—Ç—å—Å—è –æ—Ç –≤—Ä–∞–≥–∞, –Ω–æ –Ω–µ —É–¥–∞—á–Ω–æ!`); 
        }
    }, 27000);
}

export function handleLocationEvent(oldLoc , newLoc) {
    setTimeout(() => {
        if (newLoc === 'city') {
            addEvent("üè• –ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –≥–æ—Ä–æ–¥–µ!");
            character.health = character.maxHealth;
            character.mana = character.maxMana;
        } else {
            const events = [
                `–ß—É–≤—Å—Ç–≤—É–µ—Ç –¥—Ä–µ–≤–Ω—é—é –º–∞–≥–∏—é –≤ ${LOCATIONS[newLoc].name}`,
                `–ó–∞–º–µ—á–∞–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª–µ–¥—ã`,
                `–°–ª—ã—à–∏—Ç —Å—Ç—Ä–∞–Ω–Ω—ã–µ –∑–≤—É–∫–∏ –∏–∑ —Ç–µ–º–Ω–æ—Ç—ã`,
                `–ù–∞—Ö–æ–¥–∏—Ç –¥—Ä–µ–≤–Ω–∏–µ –ø–∏—Å—å–º–µ–Ω–∞ –Ω–∞ —Å—Ç–µ–Ω–µ`,
                `–í—Å—Ç—Ä–µ—á–∞–µ—Ç —Å—Ç—Ä–∞–Ω—Å—Ç–≤—É—é—â–µ–≥–æ –º—É–¥—Ä–µ—Ü–∞`,
                `–û–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç —Å–∫—Ä—ã—Ç—ã–π –ø—Ä–∏—Ä–æ–¥–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫`
            ];
            addEvent(`üåå ${character.name} ${events[Math.floor(Math.random() * events.length)]}`);
        }
        
    }, 15000);
}

export function updateMapDisplay() {
    const locationInfo = document.getElementById('locationInfo');
    locationInfo.innerHTML = `
        <strong>${LOCATIONS[character.location].name}</strong>
        <p>${LOCATIONS[character.location].description}</p>
        <p>–û–ø–∞—Å–Ω–æ—Å—Ç—å: ${'‚òÖ'.repeat(LOCATIONS[character.location].danger)}</p>
        <p>–°–ª–µ–¥—É—é—â–µ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑: ${character.travelCooldown} —Ö–æ–¥–æ–≤</p>
    `;
}